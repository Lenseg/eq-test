{"version":3,"sources":["./src/environments/environment.ts","./src/app/data-services.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServicesService {\n  url = 'http://127.0.0.1:4433';\n  constructor(private http: HttpClient) { }\n\n  getServices() {\n    return this.http.get(this.url + `/services/types`)\n  }\n  getTransactions() {\n    return this.http.get(this.url + `/transactions`)\n  }\n  createTransactions(transactions) {\n    return this.http.post(this.url + `/transactions`, transactions)\n  }\n}\n","import { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators\n} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {pairwise, map, startWith} from 'rxjs/operators';\n\nimport { DataServicesService } from './data-services.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'eq-front';\n  serviceTypes = [\n    {\n      id:1,\n      name: \"Материалы\"\n    },{\n      id: 2,\n      name: \"Консультации\"\n    },{\n      id:3,\n      name: \"Налоксон\"\n    },{\n      id:4,\n      name: \"Тест\"\n    }\n  ];\n  services = [];\n  filteredServices: Observable<{name:string, id: number, type:number}[]>[] = [];\n  checkoutForm = this.fb.group({\n    recipient: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/[А-Я]{2}[0-9]{2}[0|1][0-9]{3}[А-Я]{2}[Ж|М]|[а-я]{2}[0-9]{2}[0|1][0-9]{3}[а-я]{2}[ж|м]/i) // <-- Here's how you pass in the custom validator.\n    ]),\n    services: this.fb.array([\n      this.buildNewGroup()\n    ])\n  })\n  loader = false\n\n\n  constructor(\n    private fb: FormBuilder,\n    private dataServices: DataServicesService\n  ) {\n    this.manageNameControl(0);\n    this.getServices();\n  }\n\n  manageNameControl(index: number) {\n    let arrayControl = this.checkoutForm.get('services') as FormArray;\n    arrayControl.at(index).get('name').valueChanges.subscribe(x => {\n      if(typeof x !== 'string') {\n        this.setServiceType(x, index);\n      }\n    })\n    arrayControl.at(index).get('type').valueChanges\n    .pipe(\n      startWith(''),\n      pairwise())\n    .subscribe(([prev, next]) => {\n      if (prev !== next) {\n        arrayControl.at(index).get('name').updateValueAndValidity({ onlySelf: false, emitEvent: true });\n      }\n    })\n    this.filteredServices[index] = arrayControl.at(index).get('name').valueChanges\n      .pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(value => this._filter(value, index))\n      );\n\n  }\n  addControl() {\n    const arrayControl = <FormArray>this.checkoutForm.get('services') as FormArray;\n    let formGroup = this.buildNewGroup();\n    arrayControl.push(formGroup);\n    this.manageNameControl(arrayControl.length - 1);\n\n  }\n  removeControl(index) {\n    const arrayControl = <FormArray>this.checkoutForm.get('services') as FormArray;\n    arrayControl.removeAt(index);\n  }\n  private _filter(value: string, index: number): {name:string, id: number, type:number}[] {\n    const arrayControl = <FormArray>this.checkoutForm.get('services') as FormArray;\n    const type = arrayControl.controls[index].get('type').value;\n    const filteredByType = type && this.services ? this.services.filter(option => option.type === type) : this.services;\n    const filterValue = value.toLowerCase();\n    return filteredByType.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  getServiceName(service) {\n    return service.name\n  }\n\n  setServiceType(service, index) {\n    const arrayControl = <FormArray>this.checkoutForm.get('services') as FormArray;\n    arrayControl.controls[index].get('type').setValue(service.type);\n  }\n\n  buildNewGroup() {\n    return this.fb.group({\n      type: new FormControl('', [\n        Validators.required\n      ]),\n      name:new FormControl('', [\n        Validators.required,\n      ]),\n      volume:new FormControl('', [\n        Validators.required,\n        Validators.min(1),\n      ])\n    })\n  }\n  onSubmit(): void {\n    if(this.checkoutForm.valid) {\n      this.loader = true\n      this.dataServices.createTransactions(\n        this.serializeData(this.checkoutForm.value.services, this.checkoutForm.value.recipient)\n      ).subscribe((services:[]) => this.loader = false)\n    }\n  }\n  serializeData(services, recipient) {\n    return services.map(service => {\n      return {\n        volume: service.volume,\n        id: service.id,\n        recipient: recipient\n      }\n    })\n  }\n  getServices() {\n    this.dataServices.getServices()\n      .subscribe((services:[]) => this.services = services);\n  }\n}\n","<mat-toolbar>\n  <span>Equalit.ie тестовое задание - frontend</span>\n</mat-toolbar>\n<div class=\"container mt-20\">\n  <mat-card>\n    <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-card-header >\n        <mat-card-title>Учет поддержки</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <mat-form-field class=\"field field-number\">\n            <mat-label>Реципиент</mat-label>\n            <input matInput\n              formControlName=\"recipient\"\n              type=\"text\"\n            >\n          </mat-form-field>\n        </div>\n        <div formArrayName=\"services\">\n          <div  *ngFor=\"let control of checkoutForm.get('services')?.controls; index as i;\">\n            <div [formGroupName]=\"i\">\n              <mat-form-field  class=\"field\">\n                <mat-label>Тип продукта </mat-label>\n                <mat-select\n                  formControlName=\"type\"\n                >\n                  <mat-option *ngFor=\"let option of serviceTypes\" [value]=\"option.id\">{{option.name}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field  class=\"field\">\n                <mat-label>Продукт</mat-label>\n                <input type=\"text\"\n                  matInput\n                  formControlName=\"name\"\n                  [matAutocomplete]=\"auto\"\n                  (change)=\"setServiceType($event, i)\"\n                >\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=getServiceName>\n                  <mat-option *ngFor=\"let option of filteredServices[i] | async\" [value]=\"option\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n              <mat-form-field class=\"field field-number\">\n                <mat-label>Количество</mat-label>\n                <input matInput\n                  formControlName=\"volume\"\n                  type=\"number\"\n                >\n              </mat-form-field>\n              <button mat-icon-button (click)=removeControl(i)>\n                <mat-icon>close</mat-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      <button mat-raised-button color=\"primary\" (click)=addControl()>Добавить продукт</button>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Сохранить</button>\n        <mat-icon *ngIf=\"loader\" aria-hidden=\"false\">loader</mat-icon>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}